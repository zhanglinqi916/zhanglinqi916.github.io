<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>FB</title>
    <url>/2020/09/06/booke/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><iframe frameborder="no" border="0" marginwidth="30%" marginheight="0" width="800" height="100" src="//music.163.com/outchain/player?type=2&id=1471064193&auto=1&height=66"></iframe>


<pre><code>                                          第一篇博客 </code></pre>
<pre><code class="bash">学历如外表，实力如内在。做软件是无奈，做硬件是兴趣。</code></pre>
<a id="more"></a>                                          
<hr>
<p>!简书: <a href="https://www.jianshu.com/p/399e5a3c7cc5">简书</a><br>写的不错 一个md的基础教学<br>*More info: <a href="https://www.bilibili.com/">bilbil</a></p>
<hr>
<h3 id="搞笑视频"><a href="#搞笑视频" class="headerlink" title="搞笑视频"></a>搞笑视频</h3><iframe height="400" width="600" src="//player.bilibili.com/player.html?aid=49775093&cid=87150521&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<hr>
<table>
<thead>
<tr>
<th align="left"><img src="/2020/09/06/booke/gif.gif"></th>
<th align="center"><img src="/2020/09/06/booke/gif.gif"></th>
<th align="right"><img src="/2020/09/06/booke/gif.gif"></th>
</tr>
</thead>
</table>
]]></content>
      <categories>
        <category>happy</category>
      </categories>
  </entry>
  <entry>
    <title>tomcat</title>
    <url>/2020/09/21/tomcat/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="今日内容："><a href="#今日内容：" class="headerlink" title="今日内容："></a>今日内容：</h1><pre><code>1. Servlet
2. HTTP协议
3. Request</code></pre>
<h2 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h2><pre><code>* Servlet就是一个接口，定义了Java类被浏览器访问到(tomcat识别)的规则。
* 将来我们自定义一个类，实现Servlet接口，复写方法。
* 快速入门：
    1. 创建JavaEE项目
    2. 定义一个类，实现Servlet接口
        * public class ServletDemo1 implements Servlet
    3. 实现接口中的抽象方法
        1注释方法在接口上方写@WebServlet(&quot;/demo&quot;)用于网页访问</code></pre>
<h2 id="HTTP："><a href="#HTTP：" class="headerlink" title="HTTP："></a>HTTP：</h2><pre><code>* 概念：Hyper Text Transfer Protocol 超文本传输协议
    * 传输协议：定义了，客户端和服务器端通信时，发送数据的格式
    * 特点：
        1. 基于TCP/IP的高级协议
        2. 默认端口号:80
        3. 基于请求/响应模型的:一次请求对应一次响应
        4. 无状态的：每次请求之间相互独立，不能交互数据

* 请求消息数据格式
    1. 请求行
        请求方式 请求url 请求协议/版本
        GET /login.html    HTTP/1.1

        * 请求方式：
            * HTTP协议有7中请求方式，常用的有2种
                * GET：
                    1. 请求参数在请求行中，在url后。
                    2. 请求的url长度有限制的
                    3. 不太安全
                * POST：
                    1. 请求参数在请求体中
                    2. 请求的url长度没有限制的
                    3. 相对安全</code></pre>
<h2 id="Request："><a href="#Request：" class="headerlink" title="Request："></a>Request：</h2><pre><code>1. request对象和response对象的原理
    1. request和response对象是由服务器创建的。我们来使用它们
    2. request对象是来获取请求消息，response对象是来设置响应消息

2. request功能：
    1. 获取请求消息数据
        1. 获取请求行数据
            * GET /day14/demo1?name=zhangsan HTTP/1.1
            * 方法：
                1. 获取请求方式 ：GET
                    * String getMethod()  
                2. (*)获取虚拟目录：/day14
                    * String getContextPath()
                3. 获取Servlet路径: /demo1
                    * String getServletPath()
                4. 获取get方式请求参数：name=zhangsan
                    * String getQueryString()
                5. (*)获取请求URI：/day14/demo1
                    * String getRequestURI():        /day14/demo1
                    * StringBuffer getRequestURL()  :http://localhost/day14/demo1

                    * URL:统一资源定位符 ： http://localhost/day14/demo1    中华人民共和国
                    * URI：统一资源标识符 : /day14/demo1                    共和国

                6. 获取协议及版本：HTTP/1.1
                    * String getProtocol()

                7. 获取客户机的IP地址：
                    * String getRemoteAddr()    </code></pre>
]]></content>
  </entry>
  <entry>
    <title>tomcat使用</title>
    <url>/2020/09/17/%E5%86%8D%E8%A7%812020/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="tmcat教学"><a href="#tmcat教学" class="headerlink" title="tmcat教学"></a>tmcat教学</h1><hr>
<pre><code>                            tomcat教学</code></pre>
<h3 id="tomcat安装"><a href="#tomcat安装" class="headerlink" title="tomcat安装"></a>tomcat安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">   1.下载!: [下载](http:&#x2F;&#x2F;tomcat.apache.org&#x2F; )</span><br><span class="line">2.安装：解压压缩包即可</span><br><span class="line">3.卸载：删除目录</span><br><span class="line">4.目录结构:</span><br></pre></td></tr></table></figure>
   <div>
    <img src="/2020/09/17/%E5%86%8D%E8%A7%812020/1.png"></div>

<pre><code>    5.启动：寻找bin目录下的 startup.bat
            输入浏览器：http；//localhost：8080回车访问自己
                        http：//别人的ip：8080回车访问别人
    6部署:  在webapp上部署文件夹hello
             /hello： 项目的访问路径--&gt;虚拟目录
             在hello的文件夹里写个hello.html，用于做自己的页面

            在conf\Catalina\localhost创建任意名称的xml文件。在文件中编写
                    &lt;Context docBase=&quot;D:\hello&quot; /&gt;
                    * 虚拟目录：xml文件的名称 例如取名bbb。 就是localhost：8080\bbb\hello.html。
                    就可以访问自己的页面了

</code></pre>
]]></content>
      <categories>
        <category>chat</category>
      </categories>
  </entry>
</search>
